---
title: "social-rl prelim analysis"
format: html
---

Packages.

```{r}
library(here)
library(tidyverse)
library(janitor)
```

Load data. 

```{r}
run <- "pilota"
```

```{r}
if (run == "pilota"){
  d_raw <- read_csv(here("data","amg_gamelogs_pilota.csv")) |>
  clean_names() 
} else if (run == "pilotb") {
  d_raw <- read_csv(here("data","amg_gamelogs_pilotb.csv")) |>
  clean_names() 
} else if (run == "exp1") {
  d_raw <- read_csv(here("data","amg_gamelogs_experiment1.csv")) |>
  clean_names() 
}

```
Clean up data. 

```{r}
if (run == "pilota"){
    d <- d_raw |>
    filter(!is.na(condition_index)) |>
    select(-id, -v)
} else if (run == "pilotb") { 
  d <- d_raw |>
  filter(prolific_id!="Julio_test") |>
  filter(uid!="lpz173o40.k42j9exeqx") |>
  filter(!is.na(condition_index)) |>
  select(-id, -v)
} else if (run == "exp1") { 
  d <- d_raw
}

  
```


# Descriptives

```{r}
d |>
  select(uid) |>
  distinct() |>
  count()
```
```{r}
d |>
  group_by(uid) |>
  summarise(time = max(timestamp) - min(timestamp))
```


# Main analysis

Aggregation. 


```{r}
participant_block_scores <- d |> 
  group_by(uid, condition_index, teacher, block_index, game_type) |>
  summarise(total_reward = max(total_reward))
```

```{r}
mean_block_scores <- participant_block_scores |>
  group_by(uid, condition_index) |>
  arrange(uid, condition_index, block_index, game_type) |>
  mutate(teacher_condition = teacher[!is.na(teacher)][1], 
         block_condition = reduce(game_type, paste)) |>
  group_by(teacher_condition, block_condition, block_index, game_type) |>
  summarize(mean_reward = mean(total_reward),
            sd_reward = sd(total_reward), 
            sem_reward = sd(total_reward)/sqrt(length(total_reward)),
            ci_reward = 1.96 * sem_reward)
```


```{r}
ggplot(mean_block_scores, 
       aes(x = block_index, y = mean_reward, col = teacher_condition)) +
  facet_wrap(~block_condition) + 
  geom_pointrange(aes(shape = game_type, ymin = mean_reward - ci_reward, 
                      ymax = mean_reward + ci_reward), 
                  position = position_dodge(width = .1)) +
  geom_line()
```

